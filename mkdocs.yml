site_name: SOCless Docs
# docs_dir: 'wiki_docs'
#site_url: https://twilio-labs.github.io/socless/
nav:
  - Home:
    - index.md
    - Deploying Socless: "deploying-socless.md"
    - "key-concepts-and-terms.md"
  - Tutorials:
    - Tutorial Series Introduction: tutorials/tutorial-series-introduction.md
    - Getting Started:
      - Introduction: tutorials/quick-start/introduction.md
      - Setup: tutorials/quick-start/setup.md
      - Playbook Structure Overview: tutorials/quick-start/playbook-structure.md
      - Playbook Context Overview: tutorials/quick-start/playbook-context.md
      - Developing Our Playbook: tutorials/quick-start/creating-our-playbook.md
      - Deploying Our Playbook: tutorials/quick-start/deploying-our-playbook.md
      - Testing Our Playbook: tutorials/quick-start/testing-our-playbook.md
      - Endpoint Structure Overview: tutorials/quick-start/endpoint-structure.md
      - Creating Our Endpoint: tutorials/quick-start/creating-our-endpoint.md
      - Configuring Secrets: tutorials/quick-start/configuring-secrets.md
      - Deploying Our Endpoint: tutorials/quick-start/deploying-our-endpoint.md
      - Testing Our Endpoint: tutorials/quick-start/testing-our-endpoint.md
      - Handling Playbook Errors: tutorials/quick-start/handling-playbook-errors.md
      - Extra Credit: tutorials/quick-start/extra-credit.md
      - Conclusion: tutorials/quick-start/conclusion.md
    - Writing Custom Integrations:
      - Introduction : tutorials/writing-custom-integrations/introduction.md
      - Setup: tutorials/writing-custom-integrations/setup.md
      - Integration Structure: tutorials/writing-custom-integrations/integration-structure.md
      - GeoIP Integration: tutorials/writing-custom-integrations/geoip-integration.md
      - Slack Integration: tutorials/writing-custom-integrations/slack-integration.md
      - Using Our Integrations: tutorials/writing-custom-integrations/using-our-integrations.md
      - Conclusion: tutorials/writing-custom-integrations/conclusion.md
    - Interacting With Humans via Slack:
      - Interacting With Humans via Slack : tutorials/human-interaction/interacting-via-slack.md
      - Deploy Socless Slack : tutorials/human-interaction/deploy-socless-slack.md
      - Human Interaction Overview : tutorials/human-interaction/human-interaction-overview.md
      - Prompt a User for Confirmation : tutorials/human-interaction/prompting-a-user-for-confirmation.md
      - Making Choices in Playbooks : tutorials/human-interaction/making-choices-in-playbooks.md
      - Collect Information Using a Slack Dialog : tutorials/human-interaction/collect-information-using-a-slack-dialog.md
  - Reference Documentation:
    - Reference Documentation: reference/introduction.md
    - Variables: reference/variables.md
    - Playbooks: reference/playbooks.md
    - Built-in Integrations:
      - HTTP Request: reference/builtin-integrations/http_request.md
      - AWS Request: reference/builtin-integrations/aws_request.md
      - Create Events: reference/builtin-integrations/create_events.md
    - Event Deduplication: reference/event-deduplication.md
    - Socless & Serverless Framework: reference/socless-and-serverless.md
    - Human Interaction Architecture: reference/human-interaction-architecture.md
    - State Management In SOCless: reference/state-management-in-socless.md
    - SOCless vs Stock AWS Step Functions: reference/socless-vs-stock-stepfunctions.md
    - Setting up Our Slack Bot: reference/setting-up-a-slack-bot.md
    - Operational Monitoring: reference/operational-monitoring.md
    - Writing Good Integrations: reference/writing-good-integrations.md
  - "faqs.md"
  - 'about.md'

theme:
  name: 'material'
  palette:
    scheme: slate
    primary: yellow
    accent: yellow
  font:
    text: Work Sans
    code: Fira Code
  features:
    - navigation.tabs
    # - toc.integrate

plugins:
  - search
  - mkdocstrings:
      handlers:
        python:
          # Use setup_commands to set dummy environment variables.
          # This is a workaround that's currently needed because there are instances
          # in socless_python where os.environ.get is used at the top-level to set
          # variable that's used globally in the file, and mkdocstrings is getting tripped up by this.
          # The approriate way to handle this is to fix the instances in socless_python where imports lead
          # to statement execution, as that is a bad practive.
          # Once socless_python is fixed, this setup code can be removed
          setup_commands:
            - import os
            - os.environ.setdefault("SOCLESS_VAULT", "DUMMY_VALUE")
          rendering:
            show_source: false
      watch:
        - functions/
  - macros:
      j2_block_start_string: '[[%'
      j2_block_end_string: '%]]'
      j2_variable_start_string: '[['
      j2_variable_end_string: ']]'

markdown_extensions:
  - pymdownx.highlight:
      linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed
  - pymdownx.caret
  - pymdownx.mark
  - pymdownx.tilde
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg



extra:
  socless_repos_gh_org: https://github.com/twilio-labs
